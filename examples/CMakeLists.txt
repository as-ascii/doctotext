set(CMAKE_CXX_STANDARD 17)
foreach(n RANGE 9 9)
    add_executable(example_${n} example_${n}.cpp)
    target_include_directories(example_${n} PUBLIC ../src)
    target_link_libraries(example_${n} PRIVATE docwire_core)
    set_property(TARGET example_${n} PROPERTY
            MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
    target_link_libraries(example_${n} PRIVATE docwire_core)

    install(TARGETS example_${n}
            DESTINATION ${CMAKE_BINARY_DIR})

    file(WRITE ${CMAKE_BINARY_DIR}/example_${n}.sh "BASEDIR=$(dirname \"$0\")
       LD_LIBRARY_PATH=$BASEDIR:$$LD_LIBRARY_PATH ./$BASEDIR/example_${n} \"$@\"")
    execute_process(COMMAND chmod u+x ${CMAKE_BINARY_DIR}/example_${n}.sh)
endforeach(n)

file(READ ../README.md content)
set(n 1)
while (TRUE)
	string(FIND "${content}" "```cpp" start_pos)
	if (start_pos EQUAL -1)
		break()
	endif()
	math(EXPR start_pos "${start_pos} + 6")
	string(SUBSTRING "${content}" ${start_pos} -1 content)
	string(FIND "${content}" "```" end_pos)
	if (end_pos EQUAL -1)
		message(FATAL_ERROR "Failed to find end of code block starting at position ${start_pos}")
	endif()
	string(SUBSTRING "${content}" 0 ${end_pos} code_block)
	set(temp_example_file "${CMAKE_BINARY_DIR}/temp_example_${n}.cpp")
	file(WRITE ${temp_example_file} "${code_block}")
	add_executable(temp_example_${n} ${temp_example_file})
	target_include_directories(temp_example_${n} PUBLIC ../src)
	target_link_libraries(temp_example_${n} PRIVATE docwire_core)
	math(EXPR n "${n} + 1")
	math(EXPR end_pos "${end_pos} + 3")
	string(SUBSTRING "${content}" ${end_pos} -1 content)
endwhile()
