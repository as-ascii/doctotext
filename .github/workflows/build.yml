name: Build
on: [pull_request, workflow_dispatch]
permissions:
  packages: write
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, windows-2019, windows-2022, macos-12, flyci-macos-large-latest-m1]
        triplet: [x64-linux-dynamic, x64-windows, x64-osx-dynamic, arm64-osx-dynamic]
        addon: ["", "asan", "tsan"]
        exclude:
          - os: ubuntu-20.04
            triplet: x64-windows
          - os: ubuntu-20.04
            triplet: x64-osx-dynamic
          - os: ubuntu-20.04
            triplet: arm64-osx-dynamic
          - os: ubuntu-22.04
            triplet: x64-windows
          - os: ubuntu-22.04
            triplet: x64-osx-dynamic
          - os: ubuntu-22.04
            triplet: arm64-osx-dynamic
          - os: windows-2019
            triplet: x64-linux-dynamic
          - os: windows-2019
            triplet: x64-osx-dynamic
          - os: windows-2019
            triplet: arm64-osx-dynamic
          - os: windows-2022
            triplet: x64-linux-dynamic
          - os: windows-2022
            triplet: x64-osx-dynamic
          - os: windows-2022
            triplet: arm64-osx-dynamic
          - os: macos-12
            triplet: x64-linux-dynamic
          - os: macos-12
            triplet: x64-windows
          - os: macos-12
            triplet: arm64-osx-dynamic
          - os: flyci-macos-large-latest-m1
            triplet: x64-linux-dynamic
          - os: flyci-macos-large-latest-m1
            triplet: x64-windows
          - os: flyci-macos-large-latest-m1
            triplet: x64-osx-dynamic
    name: ${{ matrix.triplet }}-${{ matrix.os }}${{ matrix.addon != '' && format('-{0}', matrix.addon) || '' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 150
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
      - name: Configure Pagefile
        if: ${{ runner.os == 'Windows' && matrix.addon == 'asan' }}
        uses: al-cheb/configure-pagefile-action@v1.4
        with:
          minimum-size: 4GB
          maximum-size: 4GB
          disk-root: "C:"
      - run: |
          ${{ matrix.os == 'ubuntu-20.04' && 'sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y && sudo apt-get update && sudo apt-get install gcc-11 g++-11 -y && sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110 --slave /usr/bin/g++ g++ /usr/bin/g++-11 && sudo update-alternatives --set gcc /usr/bin/gcc-11' || '' }}
          ${{ runner.os == 'Linux' && 'sudo apt-get install -y autopoint doxygen' || '' }}
          ${{ runner.os == 'macOS' && 'brew install md5sha1sum automake autogen doxygen' || '' }}
          ${{ runner.os == 'Windows' && 'choco install archiver doxygen.install graphviz -y' || '' }}
          ${{ runner.os == 'Windows' && './build.ps1' || './build.sh' }}
        env:
          CREATE_ARCHIVE: "1"
          BINARY_CACHE_GITHUB_USER: "github-actions"
          BINARY_CACHE_GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          BINARY_CACHE_GITHUB_OWNERS: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.repo.owner != github.event.pull_request.base.repo.owner) && format('{0} {1}', github.event.pull_request.base.repo.owner.login, github.event.pull_request.head.repo.owner.login) || github.repository_owner }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ADDON: ${{ matrix.addon }}
          ASAN_OPTIONS: ${{ matrix.addon == 'asan' && 'detect_odr_violation=1:detect_leaks=0' || '' }}
          TSAN_OPTIONS: ${{ matrix.addon == 'tsan' && 'halt_on_error=1' || '' }}
          DEBUG: ${{ runner.debug }}
      - uses: actions/upload-artifact@v4
        if: success() && matrix.addon == ''
        with:
          name: ${{ matrix.triplet }}-${{ matrix.os }}-binaries
          path: |
              ${{ runner.os == 'Windows' && './docwire*.zip' || './docwire*.bz2' }}
              ./docwire*.sha1
          if-no-files-found: error
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.triplet }}-${{ matrix.os }}-${{ matrix.addon == '' && 'binaries' || matrix.addon }}-logs
          path: vcpkg/buildtrees/*/*.log
          if-no-files-found: error
