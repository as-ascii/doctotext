name: Build
on: [pull_request, workflow_dispatch]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2019, macos-12, flyci-macos-large-latest-m1]
        triplet: [x64-linux-dynamic, x64-windows, x64-osx-dynamic, arm64-osx-dynamic]
        sanitizer: ["", "address", "thread"]
        exclude:
          - os: ubuntu-22.04
            triplet: x64-windows
          - os: ubuntu-22.04
            triplet: x64-osx-dynamic
          - os: ubuntu-22.04
            triplet: arm64-osx-dynamic
          - os: windows-2019
            triplet: x64-linux-dynamic
          - os: windows-2019
            triplet: x64-osx-dynamic
          - os: windows-2019
            triplet: arm64-osx-dynamic
          - os: macos-12
            triplet: x64-linux-dynamic
          - os: macos-12
            triplet: x64-windows
          - os: macos-12
            triplet: arm64-osx-dynamic
          - os: flyci-macos-large-latest-m1
            triplet: x64-linux-dynamic
          - os: flyci-macos-large-latest-m1
            triplet: x64-windows
          - os: flyci-macos-large-latest-m1
            triplet: x64-osx-dynamic
          - os: flyci-macos-large-latest-m1
            triplet: amd64-osx-dynamic
            sanitizer: address
          - os: flyci-macos-large-latest-m1
            triplet: amd64-osx-dynamic
            sanitizer: thread
    name: ${{ matrix.triplet }}${{ matrix.sanitizer != '' && format('-{0}-sanitizer', matrix.sanitizer) || '' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 150
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache/restore@v3
        with:
          path: ${{ runner.os == 'Windows' && '~\\AppData\\Local\\vcpkg\\archives' || '~/.cache/vcpkg/archives' }}
          key: vcpkg-binary-cache-${{ matrix.triplet }}-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
          restore-keys: |
            vcpkg-binary-cache-${{ matrix.triplet }}
      - run: ${{ runner.os == 'Windows' && './build.ps1' || './build.sh' }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SANITIZER: ${{ matrix.sanitizer }}
          ASAN_OPTIONS: ${{ matrix.sanitizer == 'address' && 'detect_leaks=0:detect_container_overflow=0' || '' }}
          TSAN_OPTIONS: ${{ matrix.sanitizer == 'thread' && format('suppressions={0}/tools/thread_sanitizer_suppressions.txt', github.workspace) || '' }}
      - uses: actions/cache/save@v3
        if: always() && matrix.sanitizer == ''
        with:
          path: ${{ runner.os == 'Windows' && '~\\AppData\\Local\\vcpkg\\archives' || '~/.cache/vcpkg/archives' }}
          key: vcpkg-binary-cache-${{ matrix.triplet }}-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
      - uses: actions/upload-artifact@v3
        if: always() && matrix.sanitizer == ''
        with:
          name: ${{ matrix.triplet }}-binaries
          path: |
              ${{ runner.os == 'Windows' && './docwire*.zip' || './docwire*.bz2' }}
              ./docwire*.sha1
          if-no-files-found: error
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ matrix.triplet }}-${{ matrix.sanitizer == '' && 'binaries' || format('{0}-sanitizer', matrix.sanitizer) }}-logs
          path: vcpkg/buildtrees/*/*.log
          if-no-files-found: error
