name: Build
on: [pull_request, workflow_dispatch]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            artifact-name: x64-linux-dynamic-binaries
            build-script: ./build.sh
            cache-key: vcpkg-binary-cache-x64-linux-dynamic
            file-pattern: |
              ./docwire*.bz2
              ./docwire*.sha1
            sanitizer: ""
          - os: windows-2019
            artifact-name: x64-windows-binaries
            build-script: ./build.ps1
            cache-key: vcpkg-binary-cache-x64-windows
            file-pattern: |
              ./docwire*.zip
              ./docwire*.sha1
            sanitizer: ""
          - os: macos-12
            artifact-name: x64-osx-dynamic-binaries
            build-script: ./build.sh
            cache-key: vcpkg-binary-cache-x64-osx-dynamic
            file-pattern: |
              ./docwire*.bz2
              ./docwire*.sha1
            sanitizer: ""
          - os: ubuntu-22.04
            artifact-name: x64-linux-dynamic-address-sanitizer
            build-script: ./build.sh
            cache-key: vcpkg-binary-cache-x64-linux-dynamic
            sanitizer: address
          - os: ubuntu-22.04
            artifact-name: x64-linux-dynamic-thread-sanitizer
            build-script: ./build.sh
            cache-key: vcpkg-binary-cache-x64-linux-dynamic
            sanitizer: thread
    timeout-minutes: 150
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache/restore@v3
        with:
          path: ${{ runner.os == 'Windows' && '~\\AppData\\Local\\vcpkg\\archives' || '~/.cache/vcpkg/archives' }}
          key: ${{ matrix.cache-key }}-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
          restore-keys: |
            ${{ matrix.cache-key }}
      - run: ${{ matrix.build-script }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SANITIZER: ${{ matrix.sanitizer }}
          ASAN_OPTIONS: ${{ matrix.sanitizer == 'address' && 'detect_leaks=0' || '' }}
          TSAN_OPTIONS: ${{ matrix.sanitizer == 'thread' && suppressions=${{ github.workspace }}/tools/thread_sanitizer_suppressions.txt || '' }}
      - uses: actions/cache/save@v3
        if: always() && matrix.sanitizer == ''
        with:
          path: ${{ runner.os == 'Windows' && '~\\AppData\\Local\\vcpkg\\archives' || '~/.cache/vcpkg/archives' }}
          key: ${{ matrix.cache-key }}-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
      - uses: actions/upload-artifact@v3
        if: always() && matrix.sanitizer == ''
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.file-pattern }}
          if-no-files-found: error
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ matrix.artifact-name }}-logs
          path: vcpkg/buildtrees/*/*.log
          if-no-files-found: error
